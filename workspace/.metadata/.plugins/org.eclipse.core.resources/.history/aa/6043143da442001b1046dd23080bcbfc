package programmers;

import java.util.ArrayList;

public class findDecimal {
	/*
	 * 소수 찾기
문제 설명
1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.

소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.
(1은 소수가 아닙니다.)

제한 조건
n은 2이상 1000000이하의 자연수입니다.
입출력 예
n	result
10	4
5	3
입출력 예 설명
입출력 예 #1
1부터 10 사이의 소수는 [2,3,5,7] 4개가 존재하므로 4를 반환

입출력 예 #2
1부터 5 사이의 소수는 [2,3,5] 3개가 존재하므로 3를 반환
	 */
	public static void main(String[] args) {
		System.out.println(solution(10));

	}

	static int solution(int n) {
		//
		if(n==2)
			return 1;
		if(n==3)
			return 2;
		if(n==5)
			return 3;
		if(n<11)
			return 4;
			
		int[] arr = new int[n+1];
		for(int i=8; i<=n; i+=2)
			arr[i] = 1;
		for(int i=9; i<=n; i+=3)
			arr[i] = 1;
		for(int i=10; i<=n; i+=5)
			arr[i] = 1;
		for(int i=14; i<=n; i+=7)
			arr[i] = 1;
		
		ArrayList<Integer> list= new ArrayList<>();
		for(int i=11; i<=n; i++){
			if(arr[i]==0){
				list.add(i);
			}
		}
		
		ArrayList<Integer> list2 = new ArrayList<>();
		list2.add(list.get(0));
		check:for(int i=0; i<list.size(); i++){
			for(Integer num : list2){
				if(i%num ==0)
					continue check;
			}
			list2.add(list.get(i));
				
		}
			
		System.out.println(list2);
		
		return list2.size()+4;


		//
	}

}
